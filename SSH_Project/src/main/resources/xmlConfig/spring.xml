<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
	    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	    xmlns:p="http://www.springframework.org/schema/p"
	    xmlns:context="http://www.springframework.org/schema/context"
	    xmlns:aop="http://www.springframework.org/schema/aop" 
	    xmlns:tx="http://www.springframework.org/schema/tx"
	    xmlns:mvc="http://www.springframework.org/schema/mvc"
	    xsi:schemaLocation="
	            http://www.springframework.org/schema/beans 
		        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		        http://www.springframework.org/schema/context
		        http://www.springframework.org/schema/context/spring-context-3.0.xsd
		        http://www.springframework.org/schema/aop 
		        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		        http://www.springframework.org/schema/tx
		        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		        http://www.springframework.org/schema/mvc
		        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
   
   <!-- 扫描系统中的service和dao组件 -->		
   <context:component-scan base-package="com.ssh.service,com.ssh.dao"></context:component-scan>
   
   <!-- 注册解析propertites配置文件的简便方式 -->
   <context:property-placeholder location="classpath:propertitesConfig/db.properties"/>
   
   <!-- 配置c3p0数据库连接池 -->      
   <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
       <property name="driverClass" value="${driverClass}"/>
       <property name="jdbcUrl" value="${jdbcUrl}"/>
       <property name="user" value="${user}"/>
       <property name="password" value="${password}"/>
   </bean>
   
   <!-- 配置entityManagerFactory -->
   <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
       <!-- 注入dataSource -->
       <property name="dataSource" ref="dataSource"/>
       
       <!-- 配置 JPA 提供商的适配器. 可以通过内部 bean 的方式来配置 -->
       <property name="jpaVendorAdapter">
           <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
       </property> 
       
       <!-- 配置jpa的基本属性 -->
       <property name="jpaProperties">
           <props>
             <!-- 在控制台显示sql -->
             <prop key="hibernate.show_sql">true</prop>
             <!-- 美化sql -->
             <prop key="hibernate.format_sql">true</prop>
             <!-- 指定创建表的策略 -->
             <prop key="hibernate.hbm2ddl.auto">update</prop>
             <!-- 配置数据库的方言 -->
             <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>  
           </props>
       </property>
       
       <!-- 配置实体类所在的包，会扫描该包下所有使用jpa注解进行持久化的类 -->
       <property name="packagesToScan" value="com.ssh.domain"/>
    </bean>
   
    <!-- 配置jpa使用的事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <!-- 注入需要事务管理的entityManagerFactory -->
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    
    <!-- 开启事务注解 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>